From 349273988bb870af9e8446f45c1adb896ef93002 Mon Sep 17 00:00:00 2001
From: sub77 <sub77@ymail.com>
Date: Sat, 26 Nov 2016 00:39:40 +0000
Subject: [PATCH] Add sdllvm-lto-defs.mk for using Snapdragon LLVM

---
 sdllvm-lto-defs.mk | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)
 create mode 100644 sdllvm-lto-defs.mk

diff --git a/sdllvm-lto-defs.mk b/sdllvm-lto-defs.mk
new file mode 100644
index 0000000..74fa49d
--- /dev/null
+++ b/sdllvm-lto-defs.mk
@@ -0,0 +1,30 @@
+ifeq ($(LOCAL_MODULE_CLASS), STATIC_LIBRARIES)
+# For STATIC_LIBRARIES we need to use SD LLVM's archiver and archiver flags.
+
+AR := $(SDCLANG_PATH)/llvm-ar
+ARFLAGS := crsD
+
+# For 32 bit
+$(LOCAL_BUILT_MODULE) : $(combo_2nd_arch_prefix)TARGET_AR := $(AR)
+$(LOCAL_BUILT_MODULE) : $(combo_var_prefix)GLOBAL_ARFLAGS := $(ARFLAGS)
+
+# For 64 bit
+intermediates := $(call local-intermediates-dir,,$(LOCAL_2ND_ARCH_VAR_PREFIX))
+LOCAL_BUILT_MODULE_64 := $(intermediates)/$(my_built_module_stem)
+
+$(LOCAL_BUILT_MODULE_64) : TARGET_AR := $(AR)
+$(LOCAL_BUILT_MODULE_64) : TARGET_GLOBAL_ARFLAGS := $(ARFLAGS)
+
+else
+# For SHARED_LIBRARIES and EXECUTABLES we need to filter out flags not
+# needed/understood by SD LLVM's Linker.
+
+linked_module_32 := $(intermediates)/LINKED/$(my_built_module_stem)
+intermediates    := $(call local-intermediates-dir,,$(LOCAL_2ND_ARCH_VAR_PREFIX))
+linked_module_64 := $(intermediates)/LINKED/$(my_built_module_stem)
+
+FLAGS_TO_BE_FILTERED := -Wl,--icf=safe -Wl,--no-undefined-version -Wl,--fix-cortex-a53-843419 -fuse-ld=gold
+$(linked_module_32) : PRIVATE_TARGET_GLOBAL_LDFLAGS := $(filter-out $(FLAGS_TO_BE_FILTERED),$(PRIVATE_TARGET_GLOBAL_LDFLAGS))
+$(linked_module_64) : PRIVATE_TARGET_GLOBAL_LDFLAGS := $(filter-out $(FLAGS_TO_BE_FILTERED),$(PRIVATE_TARGET_GLOBAL_LDFLAGS))
+
+endif
-- 
2.1.4

